{% extends 'base.html.twig' %}

{% block title %}Gallery{% endblock %}


{% block stylesheets %}
    {{ parent() }}
    <style>
        .grid-sizer,
        .grid-item {
            width: 100%;
        }
        @media (min-width: 640px) {
            .grid-sizer,
            .grid-item {
                width: 50%;
            }
        }
        @media (min-width: 768px) {
            .grid-sizer,
            .grid-item {
                width: 33.333%;
            }
        }
        @media (min-width: 1024px) {
            .grid-sizer,
            .grid-item {
                width: 25%;
            }
        }
        .grid-item {
            padding: 5px;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold mb-8 text-center">Image Preview</h1>
        <div id="masonry-grid" class="grid">
            <div class="grid-sizer"></div>
            <!-- Grid items will be inserted here -->
        </div>
    </div>

    <div id="login-modal" class="modal" style="display: block;">
        <div class="modal-content">
            <span class="close" id="close-modal">&times;</span>
            <h2>Login to Access</h2>
            <form id="email-login-form">
                <label for="email">Enter your email:</label>
                <input type="email" id="email" name="email" required />
                <button type="submit">Login</button>
            </form>
        </div>
    </div>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div class="grid grid-cols-1 gap-8">
            <div>
                <h2 class="text-2xl font-semibold text-gray-900 mb-4">Image Gallery</h2>
                {% include 'components/masonry-grid.html.twig' with {
                    items: image_thumbnails
                } %}
            </div>
        </div>
    </div>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const modal = document.getElementById('login-modal');
            const closeModal = document.getElementById('close-modal');

            // Show the modal if the user is not authenticated
            if (!document.cookie.includes('authenticated=true')) {
                modal.style.display = 'block';
            }

            // Close the modal
            closeModal.addEventListener('click', () => {
                modal.style.display = 'none';
            });

            // Handle form submission
            document.getElementById('email-login-form').addEventListener('submit', function (e) {
                e.preventDefault();
                const email = document.getElementById('email').value;

                // Send login request
                fetch('/guest/login', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email: email }),
                })
                    .then((response) => {
                        if (response.ok) {
                            // Mark user as authenticated in cookies
                            document.cookie = "authenticated=true; path=/";
                            modal.style.display = 'none';
                            location.reload(); // Reload the page to access the gallery
                        } else {
                            alert('Login failed. Please try again.');
                        }
                    });
            });
        });

    </script>

    {{ parent() }}
    <script src="https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.min.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const grid = document.querySelector('#masonry-grid');
            let msnry;

            function initMasonry() {
                msnry = new Masonry(grid, {
                    itemSelector: '.grid-item',
                    columnWidth: '.grid-sizer',
                    percentPosition: true
                });
            }

            function loadImages() {
                axios.get('{{ path('app_preview_data') }}')
                    .then(function (response) {
                        const items = response.data;
                        items.forEach(function(item) {
                            const gridItem = document.createElement('div');
                            gridItem.className = 'grid-item';
                            gridItem.innerHTML = `
                                <div class="group relative overflow-hidden bg-gray-200">
                                    <div class="relative pb-[100%]">
                                        <img
                                            src="${item.image_url}"
                                            alt="${item.image_alt}"
                                            class="absolute inset-0 h-full w-full object-cover transition-transform duration-300 group-hover:scale-110"
                                        >
                                        <div class="absolute inset-0 bg-black/40 opacity-0 transition-opacity duration-300 group-hover:opacity-100">
                                            <div class="absolute bottom-0 left-0 right-0 flex items-center justify-end gap-2 p-2 sm:p-4">
                                                <button
                                                    onclick="showFullScreenImage('${item.image_url}')"
                                                    class="rounded-full bg-white/90 p-1.5 sm:p-2 text-gray-900 shadow-sm transition-colors hover:bg-white"
                                                    title="View fullscreen"
                                                >
                                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 sm:w-[18px] sm:h-[18px]">
                                                        <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 3.75v4.5m0-4.5h4.5m-4.5 0L9 9M3.75 20.25v-4.5m0 4.5h4.5m-4.5 0L9 15M20.25 3.75h-4.5m4.5 0v4.5m0-4.5L15 9m5.25 11.25h-4.5m4.5 0v-4.5m0 4.5L15 15" />
                                                    </svg>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            `;
                            grid.appendChild(gridItem);
                        });
                        initMasonry();
                        msnry.layout();
                    })
                    .catch(function (error) {
                        console.error('Error fetching images:', error);
                    });
            }

            loadImages();
        });
    </script>

{% endblock %}


